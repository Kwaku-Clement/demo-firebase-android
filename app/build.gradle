/*
 * Copyright (c) 2015-2018, Virgil Security, Inc.
 *
 * Lead Maintainer: Virgil Security Inc. <support@virgilsecurity.com>
 *
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     (1) Redistributions of source code must retain the above copyright notice, this
 *     list of conditions and the following disclaimer.
 *
 *     (2) Redistributions in binary form must reproduce the above copyright notice,
 *     this list of conditions and the following disclaimer in the documentation
 *     and/or other materials provided with the distribution.
 *
 *     (3) Neither the name of virgil nor the names of its
 *     contributors may be used to endorse or promote products derived from
 *     this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.android.virgilsecurity.virgilonfire"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName majorVersion + "." + minorVersion + "." + patchVersion
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", appName + "-v" + versionName)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // Support
    implementation "com.android.support:appcompat-v7:$supportLibrary"
    implementation "com.android.support.constraint:constraint-layout:$constraintLayout"
    implementation "com.android.support:design:$supportLibrary"

    // RxJava
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroid"
    implementation "io.reactivex.rxjava2:rxjava:$rxJava"
    implementation "com.squareup.retrofit2:adapter-rxjava:$rxRetrofitAdapter"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"

    // Gson
    implementation "com.google.code.gson:gson:$gson"
    implementation "com.squareup.retrofit2:converter-gson:$converterGson"

    // Logging Interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$loggingInterceptor"

    // ButterKnife
    implementation "com.jakewharton:butterknife:$butterKnife"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnife"

    // Network Tracker
    implementation "com.github.pwittchen:reactivenetwork-rx2:$networkTracker"

    // Virgil Security
    implementation "com.virgilsecurity.sdk:crypto-android:$virgilCrypto"
    implementation "com.virgilsecurity.sdk:sdk:$virgilSdk"
    implementation ('com.virgilsecurity:pythia:0.2.0') {
        exclude group: 'com.virgilsecurity.sdk', module: 'crypto'
    }
    implementation ('com.virgilsecurity:keyknox:0.1.0') {
        exclude group: 'com.virgilsecurity.sdk', module: 'crypto'
    }

    // Dagger
    implementation "com.google.dagger:dagger-android:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger"

    // Apache commons
    implementation "org.apache.commons:commons-lang3:$apacheCommons"

    // Firebase
    implementation "com.google.firebase:firebase-core:$firebaseCore"
    implementation "com.google.firebase:firebase-auth:$firebaseAuth"
    implementation "com.google.firebase:firebase-firestore:$firebaseFirestore"
//    implementation "com.crashlytics.sdk.android:crashlytics:$crashlytics"

    // Room
    implementation "android.arch.persistence.room:runtime:$room"
    annotationProcessor "android.arch.persistence.room:compiler:$room"
    implementation "android.arch.persistence.room:rxjava2:$room"
}

apply plugin: 'com.google.gms.google-services'
